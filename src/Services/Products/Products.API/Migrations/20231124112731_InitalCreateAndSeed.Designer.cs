// <auto-generated />
using System;
using Inveon.eCommerceExample.Products.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Products.API.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20231124112731_InitalCreateAndSeed")]
    partial class InitalCreateAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inveon.eCommerceExample.Products.API.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text")
                        .HasColumnName("image_path");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bb8b7da-b8a6-4301-9ae3-9a3d329e74f9"),
                            CreatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 237, DateTimeKind.Utc).AddTicks(9968),
                            ImagePath = "/images/air-jordan-1-retro-high-og-washed-black.png",
                            Name = "Air Jordan 1 Retro High OG \"Washed Black\"",
                            Price = 4799.8999999999996,
                            UpdatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 237, DateTimeKind.Utc).AddTicks(9969)
                        },
                        new
                        {
                            Id = new Guid("cce7aa8e-1941-4363-a6d6-7779b7140c13"),
                            CreatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(42),
                            ImagePath = "/images/air-jordan-1-retro-high-og-chicago-lost-and-found.png",
                            Name = "Air Jordan 1 Retro High OG \"Chicago Lost & Found\"",
                            Price = 5690.8999999999996,
                            UpdatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(42)
                        },
                        new
                        {
                            Id = new Guid("165cb929-3e26-4f60-b55b-4591da2b19fa"),
                            CreatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(54),
                            ImagePath = "/images/air-jordan-1-retro-high-og-gorge-green.png",
                            Name = "Air Jordan 1 Retro High OG \"Gorge Green\"",
                            Price = 3690.9000000000001,
                            UpdatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(54)
                        },
                        new
                        {
                            Id = new Guid("4f84a4c9-d955-404f-84e4-b52af5ad7d03"),
                            CreatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(64),
                            ImagePath = "/images/air-jordan-1-retro-high-og-lucky-green.png",
                            Name = "Air Jordan 1 Retro High OG \"Lucky Green\"",
                            Price = 2890.9000000000001,
                            UpdatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(64)
                        },
                        new
                        {
                            Id = new Guid("06773c9a-9642-4947-bd42-f98a68cf2e12"),
                            CreatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(74),
                            ImagePath = "/images/travis-scott-x-air-jordan-1-retro-high-og-mocha.png",
                            Name = "Travis Scott x Air Jordan 1 Retro High OG \"Mocha\"",
                            Price = 31790.900000000001,
                            UpdatedAt = new DateTime(2023, 11, 24, 11, 27, 31, 238, DateTimeKind.Utc).AddTicks(74)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
